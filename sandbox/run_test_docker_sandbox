#!/usr/bin/env python3

import docker
import string
import random
from grader.asset_management import AssetFolder
from os import path
from sys import argv, exit


def id_generator(size=6, chars=string.ascii_uppercase + string.digits):
    return ''.join(random.choice(chars) for _ in range(size))


def generate_container(client, code_dir, command):
    return client.create_container(
        "macobo/python-grader-sandbox",
        command=command,
        volumes={code_dir: {}},
        working_dir=code_dir,
        cpu_shares=1,
        #network_disabled=True
    )

if __name__ == "__main__":
    if len(argv) < 4:
        print("Usage: run_test_docker_sandbox <tester-path> <solution-path> <test-name>")
        exit(1)

    tester_path, solution_path, test_name = argv[1:4]
    code_dir = "/code-{}".format(id_generator())

    assets = AssetFolder(tester_path, solution_path, [path.dirname(tester_path)])
    command = [
        #"/run_test_no_sandbox",
        code_dir,
        path.basename(tester_path),
        path.basename(solution_path),
        test_name
    ]

    try:
        c = docker.Client()
        container = generate_container(c, code_dir, command)

        a = c.start(container, binds={assets.path: code_dir})
        print("".join(c.logs(container, stream=True)))
    finally:
        pass
        #assets.remove()
